{"resourceType":"CodeSystem","id":"map-transform","meta":{"lastUpdated":"2016-03-31T08:01:25.570+11:00"},"text":{"status":"generated","div":"<div xmlns=\"http://www.w3.org/1999/xhtml\">\n\t\t\t\t\t\t<h2>StructureMapTransform</h2>\n\t\t\t\t\t\t<p>How data is copied / created</p>\n\t\t\t\t\t\t<p>This code system http://hl7.org/fhir/map-transform defines the following codes:</p>\n\t\t\t\t\t\t<table class=\"codes\">\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<b>Code</b>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<b>Display</b>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<b>Definition</b>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>create\n                  <a name=\"create\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>create</td>\n\t\t\t\t\t\t\t\t<td>create(type : string) - type is passed through to the application on the standard API, and must be known by it</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>copy\n                  <a name=\"copy\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>copy</td>\n\t\t\t\t\t\t\t\t<td>copy(source)</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>truncate\n                  <a name=\"truncate\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>truncate</td>\n\t\t\t\t\t\t\t\t<td>truncate(source, length) - source must be stringy type</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>escape\n                  <a name=\"escape\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>escape</td>\n\t\t\t\t\t\t\t\t<td>escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>cast\n                  <a name=\"cast\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>cast</td>\n\t\t\t\t\t\t\t\t<td>cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>append\n                  <a name=\"append\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>append</td>\n\t\t\t\t\t\t\t\t<td>append(source...) - source is element or string</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>translate\n                  <a name=\"translate\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>translate</td>\n\t\t\t\t\t\t\t\t<td>translate(source, uri_of_map) - use the translate operation</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<td>reference\n                  <a name=\"reference\"> </a>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td>reference</td>\n\t\t\t\t\t\t\t\t<td>reference(source : object) - return a string that references the provided tree properly</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t</div>"},"extension":[{"url":"http://hl7.org/fhir/StructureDefinition/valueset-oid","valueUri":"urn:oid:2.16.840.1.113883.4.642.1.537"}],"url":"http://hl7.org/fhir/map-transform","version":"1.4.0","name":"StructureMapTransform","status":"draft","experimental":false,"publisher":"HL7 (FHIR Project)","contact":[{"telecom":[{"system":"other","value":"http://hl7.org/fhir","rank":1},{"system":"email","value":"fhir@lists.hl7.org","rank":1}]}],"description":"How data is copied / created","caseSensitive":true,"valueSet":"http://hl7.org/fhir/ValueSet/map-transform","compositional":false,"versionNeeded":false,"content":"complete","count":0,"concept":[{"code":"create","display":"create","definition":"create(type : string) - type is passed through to the application on the standard API, and must be known by it"},{"code":"copy","display":"copy","definition":"copy(source)"},{"code":"truncate","display":"truncate","definition":"truncate(source, length) - source must be stringy type"},{"code":"escape","display":"escape","definition":"escape(source, fmt1, fmt2) - change source from one kind of escaping to another (plain, java, xml, json). note that this is for when the string itself is escaped"},{"code":"cast","display":"cast","definition":"cast(source, type?) - case source from one type to another. target type can be left as implicit if there is one and only one target type known"},{"code":"append","display":"append","definition":"append(source...) - source is element or string"},{"code":"translate","display":"translate","definition":"translate(source, uri_of_map) - use the translate operation"},{"code":"reference","display":"reference","definition":"reference(source : object) - return a string that references the provided tree properly"}]}