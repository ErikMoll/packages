<?xml version="1.0" encoding="UTF-8"?><StructureDefinition xmlns="http://hl7.org/fhir"><id value="unsignedInt"/><meta><lastUpdated value="2016-08-21T07:35:37.981-06:00"/></meta><url value="http://hl7.org/fhir/StructureDefinition/unsignedInt"/><name value="unsignedInt"/><status value="draft"/><publisher value="HL7 FHIR Standard"/><contact><telecom><system value="other"/><value value="http://hl7.org/fhir"/></telecom></contact><description value="Base StructureDefinition for unsignedInt type: An integer with a value that is not negative (e.g. &gt;= 0)"/><fhirVersion value="1.4.0"/><kind value="datatype"/><abstract value="false"/><baseType value="unsignedInt"/><baseDefinition value="http://hl7.org/fhir/StructureDefinition/integer"/><derivation value="specialization"/><snapshot><element id="unsignedInt"><path value="unsignedInt"/><short value="Primitive Type unsignedInt"/><definition value="An integer with a value that is not negative (e.g. &gt;= 0)"/><min value="0"/><max value="*"/><base><path value="unsignedInt"/><min value="0"/><max value="*"/></base></element><element id="unsignedInt.extension"><path value="unsignedInt.extension"/><short value="Additional Content defined by implementations"/><definition value="May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension."/><comments value="There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone."/><alias value="extensions"/><alias value="user content"/><min value="0"/><max value="*"/><base><path value="unsignedInt.extension"/><min value="0"/><max value="*"/></base><type><code value="Extension"/></type></element><element id="unsignedInt.value"><path value="unsignedInt.value"/><representation value="xmlAttr"/><short value="Primitive value for unsignedInt"/><definition value="Primitive value for unsignedInt"/><min value="0"/><max value="1"/><base><path value="integer.value"/><min value="0"/><max value="1"/></base><type><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-regex"><valueString value="[0]|([1-9][0-9]*)"/></extension><code><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type"><valueString value="number"/></extension><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type"><valueString value="xsd:nonNegativeInteger"/></extension><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type"><valueString value="xsd:nonNegativeInteger"/></extension></code></type></element></snapshot><differential><element id="unsignedInt"><path value="unsignedInt"/><short value="Primitive Type unsignedInt"/><definition value="An integer with a value that is not negative (e.g. &gt;= 0)"/><min value="0"/><max value="*"/></element><element id="unsignedInt.value"><path value="unsignedInt.value"/><representation value="xmlAttr"/><short value="Primitive value for unsignedInt"/><definition value="Primitive value for unsignedInt"/><min value="0"/><max value="1"/><type><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-regex"><valueString value="[0]|([1-9][0-9]*)"/></extension><code><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-json-type"><valueString value="number"/></extension><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-xml-type"><valueString value="xsd:nonNegativeInteger"/></extension><extension url="http://hl7.org/fhir/StructureDefinition/structuredefinition-rdf-type"><valueString value="xsd:nonNegativeInteger"/></extension></code></type></element></differential></StructureDefinition>