/// url = 'http://hl7.org/fhir/StructureMap/TestScript4Bto5'
/// name = 'TestScript4Bto5'
/// title = 'FML Conversion for TestScript: R4B to R5'

uses "http://hl7.org/fhir/4.3/StructureDefinition/TestScript" alias TestScriptR4B as source
uses "http://hl7.org/fhir/StructureDefinition/TestScript" alias AccountR5 as target

imports "http://hl7.org/fhir/StructureMap/*4Bto5

group TestScript(source src : TestScriptR4B, target tgt : TestScriptR5) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.identifier -> tgt.identifier;
  src.version -> tgt.version;
  src.versionAlgorithm : string -> tgt.versionAlgorithm;
  src.versionAlgorithm : Coding -> tgt.versionAlgorithm;
  src.name -> tgt.name;
  src.title -> tgt.title;
  src.status -> tgt.status;
  src.experimental -> tgt.experimental;
  src.date -> tgt.date;
  src.publisher -> tgt.publisher;
  src.contact -> tgt.contact;
  src.description -> tgt.description;
  src.useContext -> tgt.useContext;
  src.jurisdiction -> tgt.jurisdiction;
  src.purpose -> tgt.purpose;
  src.copyright -> tgt.copyright;
  src.copyrightLabel -> tgt.copyrightLabel;
  src.origin as s -> tgt.origin as t then TestScriptOrigin(s,t);
  src.destination as s -> tgt.destination as t then TestScriptDestination(s,t);
  src.metadata as s -> tgt.metadata as t then TestScriptMetadata(s,t);
  src.scope as s -> tgt.scope as t then TestScriptScope(s,t);
  src.fixture as s -> tgt.fixture as t then TestScriptFixture(s,t);
  src.profile -> tgt.profile;
  src.variable as s -> tgt.variable as t then TestScriptVariable(s,t);
  src.setup as s -> tgt.setup as t then TestScriptSetup(s,t);
  src.test as s -> tgt.test as t then TestScriptTest(s,t);
  src.teardown as s -> tgt.teardown as t then TestScriptTeardown(s,t);
}

group TestScriptOrigin(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.index -> tgt.index;
  src.profile -> tgt.profile;
  src.url -> tgt.url;
}

group TestScriptDestination(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.index -> tgt.index;
  src.profile -> tgt.profile;
  src.url -> tgt.url;
}

group TestScriptMetadata(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.link as s -> tgt.link as t then TestScriptMetadataLink(s,t);
  src.capability as s -> tgt.capability as t then TestScriptMetadataCapability(s,t);
}

group TestScriptMetadataLink(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.url -> tgt.url;
  src.description -> tgt.description;
}

group TestScriptMetadataCapability(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.required -> tgt.required;
  src.validated -> tgt.validated;
  src.description -> tgt.description;
  src.origin -> tgt.origin;
  src.destination -> tgt.destination;
  src.link -> tgt.link;
  src.capabilities -> tgt.capabilities;
}

group TestScriptScope(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.artifact -> tgt.artifact;
  src.conformance -> tgt.conformance;
  src.phase -> tgt.phase;
}

group TestScriptFixture(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.autocreate -> tgt.autocreate;
  src.autodelete -> tgt.autodelete;
  src.resource -> tgt.resource;
}

group TestScriptVariable(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.name -> tgt.name;
  src.defaultValue -> tgt.defaultValue;
  src.description -> tgt.description;
  src.expression -> tgt.expression;
  src.headerField -> tgt.headerField;
  src.hint -> tgt.hint;
  src.path -> tgt.path;
  src.sourceId -> tgt.sourceId;
}

group TestScriptSetup(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.action as s -> tgt.action as t then TestScriptSetupAction(s,t);
}

group TestScriptSetupAction(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.operation as s -> tgt.operation as t then TestScriptSetupActionOperation(s,t);
  src.assert as s -> tgt.assert as t then TestScriptSetupActionAssert(s,t);
}

group TestScriptSetupActionOperation(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.type -> tgt.type;
  src.resource -> tgt.resource;
  src.label -> tgt.label;
  src.description -> tgt.description;
  src.accept -> tgt.accept;
  src.contentType -> tgt.contentType;
  src.destination -> tgt.destination;
  src.encodeRequestUrl -> tgt.encodeRequestUrl;
  src.method -> tgt.method;
  src.origin -> tgt.origin;
  src.params -> tgt.params;
  src.requestHeader as s -> tgt.requestHeader as t then TestScriptSetupActionOperationRequestHeader(s,t);
  src.requestId -> tgt.requestId;
  src.responseId -> tgt.responseId;
  src.sourceId -> tgt.sourceId;
  src.targetId -> tgt.targetId;
  src.url -> tgt.url;
}

group TestScriptSetupActionOperationRequestHeader(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.field -> tgt.field;
  src.value -> tgt.value;
}

group TestScriptSetupActionAssert(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.label -> tgt.label;
  src.description -> tgt.description;
  src.direction -> tgt.direction;
  src.compareToSourceId -> tgt.compareToSourceId;
  src.compareToSourceExpression -> tgt.compareToSourceExpression;
  src.compareToSourcePath -> tgt.compareToSourcePath;
  src.contentType -> tgt.contentType;
  src.defaultManualCompletion -> tgt.defaultManualCompletion;
  src.expression -> tgt.expression;
  src.headerField -> tgt.headerField;
  src.minimumId -> tgt.minimumId;
  src.navigationLinks -> tgt.navigationLinks;
  src.operator -> tgt.operator;
  src.path -> tgt.path;
  src.requestMethod -> tgt.requestMethod;
  src.requestURL -> tgt.requestURL;
  src.resource -> tgt.resource;
  src.response -> tgt.response;
  src.responseCode -> tgt.responseCode;
  src.sourceId -> tgt.sourceId;
  src.stopTestOnFail -> tgt.stopTestOnFail;
  src.validateProfileId -> tgt.validateProfileId;
  src.value -> tgt.value;
  src.warningOnly -> tgt.warningOnly;
  src.requirement as s -> tgt.requirement as t then TestScriptSetupActionAssertRequirement(s,t);
}

group TestScriptSetupActionAssertRequirement(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.link : uri -> tgt.link;
  src.link : canonical -> tgt.link;
}

group TestScriptTest(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.name -> tgt.name;
  src.description -> tgt.description;
  src.action as s -> tgt.action as t then TestScriptTestAction(s,t);
}

group TestScriptTestAction(source src : null, target tgt : null) extends DomainResource <<type+>> {
}

group TestScriptTeardown(source src : null, target tgt : null) extends DomainResource <<type+>> {
  src.action as s -> tgt.action as t then TestScriptTeardownAction(s,t);
}

group TestScriptTeardownAction(source src : null, target tgt : null) extends DomainResource <<type+>> {
}

